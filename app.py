import pandas as pd
import re
import streamlit as st
import io
import zipfile

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡πÉ‡∏´‡πâ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≤‡∏Ç‡∏≤ (‡πÄ‡∏•‡∏Ç 5 ‡∏´‡∏•‡∏±‡∏Å)
def process_text_step1(text):
    if not isinstance(text, str):
        return text

    # 1. ‡∏•‡∏ö‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≤‡∏Ç‡∏≤
    def replace_non_id_parentheses(match):
        inner = match.group(1)
        if re.fullmatch(r'\d{5}', inner):  # ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≤‡∏Ç‡∏≤
            return f'({inner})'
        else:
            return inner  # ‡∏•‡∏ö‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö ‡πÅ‡∏ï‡πà‡∏Ñ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ

    text = re.sub(r'\(([^)]+)\)', replace_non_id_parentheses, text)

    # 2. ‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏Ç 5 ‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô ()
    existing_ids = set(re.findall(r'\((\d{5})\)', text))

    def add_parentheses(match):
        num = match.group(1)
        if num not in existing_ids:
            return f'({num})'
        return num

    text = re.sub(r'(?<!\()\b(\d{5})\b(?!\))', add_parentheses, text)

    # 3. ‡∏•‡∏ö space ‡∏ã‡πâ‡∏≥
    text = re.sub(r'\s+', ' ', text).strip()

    return text

# ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö `)(` ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
def process_text_step2(text):
    if isinstance(text, str):
        return re.sub(r'\)\s*\(', ' ', text).strip()
    return text

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏´‡∏•‡∏±‡∏Å
def process_data(df):
    try:
        df_cleaned = df.copy()

        # ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
        df_cleaned[9] = df_cleaned[9].apply(process_text_step1)
        df_cleaned = df_cleaned.applymap(process_text_step2)

        # ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        df_cleaned.columns = [
            'col0', 'col1', 'col2', 'col3', 'license_type', 'col5',
            'col6', 'col7', 'col8', 'company_name', 'col10', 'col11',
            'col12', 'subdistrict', 'district', 'province', 'postal_code', 'columshit'
        ]

        # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°
        df_cleaned['group_name'] = df_cleaned['company_name'].apply(
            lambda x: re.sub(r'\(.*?\)', '', x).strip()
        )
        df_cleaned = df_cleaned.sort_values(by='group_name')
        df_cleaned = df_cleaned.drop(columns=['group_name'])

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≤‡∏Ç‡∏≤
        df_cleaned['detected_id'] = df_cleaned['company_name'].str.extract(r'\((\d{5})\)')

        # ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Å‡∏•‡∏∏‡πà‡∏°
        df_with_id = df_cleaned[df_cleaned['detected_id'].notnull()].copy()
        df_without_id = df_cleaned[df_cleaned['detected_id'].isnull()].copy()

        # ‡∏•‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô export
        df_with_id = df_with_id.drop(columns=['detected_id'])
        df_without_id = df_without_id.drop(columns=['detected_id'])

        # Export ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .txt
        output_with_id = io.StringIO()
        output_without_id = io.StringIO()
        df_with_id.to_csv(output_with_id, sep='|', index=False, header=False)
        df_without_id.to_csv(output_without_id, sep='|', index=False, header=False)

        # ‡πÉ‡∏™‡πà ZIP
        zip_buffer = io.BytesIO()
        with zipfile.ZipFile(zip_buffer, "w") as zip_file:
            zip_file.writestr("output_with_id.txt", output_with_id.getvalue())
            zip_file.writestr("output_without_id.txt", output_without_id.getvalue())

        zip_buffer.seek(0)
        return zip_buffer

    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return None

# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á Streamlit
st.title("üìÑ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏™‡∏£‡∏£‡∏û‡∏™‡∏≤‡∏°‡∏¥‡∏ï‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")

uploaded_file = st.file_uploader("üì§ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .txt ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•", type="txt")

if st.button("üöÄ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÑ‡∏ü‡∏•‡πå"):
    if uploaded_file:
        try:
            df = pd.read_csv(uploaded_file, delimiter='|', header=None, dtype=str)

            zip_file = process_data(df)

            if zip_file:
                st.success("‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
                st.download_button(
                    label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• (ZIP)",
                    data=zip_file,
                    file_name="processed_files.zip",
                    mime="application/zip"
                )
        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {e}")
    else:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•")
